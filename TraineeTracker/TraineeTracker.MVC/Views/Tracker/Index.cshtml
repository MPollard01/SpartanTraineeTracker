@model TrackerTraineeVM

@{
    ViewData["Title"] = "Tracker";

    string technicalSkillColour, consultantSkillColour;

    if (Model.Tracker.TechnicalSkill == "Skilled")
        technicalSkillColour = "bg-success";
    else if (Model.Tracker.TechnicalSkill == "Partially Skilled")
        technicalSkillColour = "bg-primary";
    else if (Model.Tracker.TechnicalSkill == "Low Skilled")
        technicalSkillColour = "bg-warning";
    else
        technicalSkillColour = "bg-danger";

    if (Model.Tracker.ConsultantSkill == "Skilled")
        consultantSkillColour = "bg-success";
    else if (Model.Tracker.ConsultantSkill == "Partially Skilled")
        consultantSkillColour = "bg-primary";
    else if (Model.Tracker.ConsultantSkill == "Low Skilled")
        consultantSkillColour = "bg-warning";
    else
        consultantSkillColour = "bg-danger";

    var defaultDate = new DateTime(0001, 01, 01);
    var previousDate = defaultDate;
    var nextDate = defaultDate;
    var disablePreviousDate = "";
    var disableNextDate = "";
    var dateIndex = Model.DateList.IndexOf(Model.Date.Value);

    if (Model.Date.HasValue && dateIndex > 0)
        previousDate = Model.DateList[dateIndex - 1];
    else disablePreviousDate = "disabled";

    if (Model.Date.HasValue && dateIndex < Model.DateList.Count - 1)
        nextDate = Model.DateList[dateIndex + 1];
    else disableNextDate = "disabled";   
}

<div class="container mt-3">
    <header class="d-flex justify-content-between align-items-center">
        <h1>My Tracker <button class="btn btn-lg" data-bs-toggle="modal" data-bs-target="#trackerModal"><i class="bi bi-plus-lg link-secondary" style="font-size: 2rem"></i></button></h1>
        <div class="form-group d-flex gap-2 align-items-center">           
            <a href="@Url.Page("", new { date = previousDate })" class="btn btn-primary btn-sm @disablePreviousDate"><i class="bi bi-arrow-left"></i></a>
            <form id="dateForm" asp-action="Index" method="get">
                <select asp-for="Date" onchange="document.getElementById('dateForm').submit()" class="form-select">
                @foreach(var date in Model.DateList)
                {
                        var d = date.ToString("MM/dd/yyyy");
                        if(date == Model.Date)
                        {
                            <option selected value="@d">@date.ToShortDateString()</option>
                        }
                        else
                        {
                            <option value="@d">@date.ToShortDateString()</option>
                        } 
                }
                </select>
            </form>
            <a href="@Url.Page("", new { date = nextDate })" class="btn btn-primary btn-sm @disableNextDate"><i class="bi bi-arrow-right"></i></a>
        </div>
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-eye"></i> View
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" asp-action="Trackers">Tabular</a></li>
                
            </ul>
        </div>
    </header>

    <partial name="_CreateTrackerPartial" model="Model.CreateTracker" />

    <hr />
    <h3>Week Start: @Model.Tracker.StartDate.ToShortDateString()</h3>
    <div class="row mt-4">
        <div class="col-md-6 col-sm-12">
            <div class="card mb-4">
                <div class="card-header spartapink text-white border-0 fs-4">
                    @Html.DisplayNameFor(model => model.Tracker.Start)
                </div>
                <div class="card-body bg-dark text-white">
                    <p class="card-text"> @Html.DisplayFor(model => model.Tracker.Start)</p>
                </div>
            </div>
            <div class="card mb-4">
                <div class="card-header spartapink text-white border-0 fs-4">
                    @Html.DisplayNameFor(model => model.Tracker.Stop)
                </div>
                <div class="card-body bg-dark text-white">
                    <p class="card-text"> @Html.DisplayFor(model => model.Tracker.Stop)</p>
                </div>
            </div>
            <div class="card mb-4">
                <div class="card-header spartapink text-white border-0 fs-4">
                    @Html.DisplayNameFor(model => model.Tracker.Continue)
                </div>
                <div class="card-body bg-dark text-white">
                    <p class="card-text"> @Html.DisplayFor(model => model.Tracker.Continue)</p>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-sm-12 gap-5 d-flex flex-column text-center justify-content-center text-white">
            <div class="card rounded-pill @technicalSkillColour">
                <p class="fs-4 fw-bold card-header-pill mt-2">
                    @Html.DisplayNameFor(model => model.Tracker.TechnicalSkill)
                </p>
                <p class="fs-4 technicalValue">
                    @Html.DisplayFor(model => model.Tracker.TechnicalSkill)
                </p>
            </div>
            <div class="card rounded-pill @consultantSkillColour">
                <p class="fs-4 fw-bold card-header-pill mt-2">
                    @Html.DisplayNameFor(model => model.Tracker.ConsultantSkill)
                </p>
                <p class="fs-4">
                    @Html.DisplayFor(model => model.Tracker.ConsultantSkill)
                </p>
            </div>
        </div>
    </div>
</div>

<script src="~/js/tabs.js"></script>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}