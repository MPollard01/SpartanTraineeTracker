@model TrainerViewTraineesVM

@{
    ViewData["Title"] = "Trainees";

    var prevDisabled = !Model.Trainees.HasPreviousPage ? "disabled text-white-50" : "";
    var nextDisabled = !Model.Trainees.HasNextPage ? "disabled text-white-50" : "";

    int next = Model.Trainees.PageIndex + 1;
    int prev = Model.Trainees.PageIndex - 1;

    var filter = (string[])ViewData["Filter"];
    
}

<nav class="navbar justify-content-center gap-5 spartapink p-0">
    <form id="searchForm" class="mx-2" role="search">
        <div class="input-group">
            @*<button class="btn btn-dark input-group-text" id="addon" type="submit"><i class="bi bi-search"></i></button>*@
            <input class="search-input" onkeypress="handleSearch(event)" name="searchString" value="@ViewData["Search"]" type="search" placeholder="Search" aria-label="Search" aria-describedby="addon">
            <input name="pageNumber" value="@Model.Trainees.PageIndex" hidden />
            @if (!string.IsNullOrEmpty((string)ViewData["Sort"]))
            {
                <input name="sortOrder" value="@ViewData["Sort"]" hidden />
            }
            
        </div>
    </form>
    <ul class="list-unstyled d-flex gap-3 w-25 justify-content-center m-0">
        <li class="@prevDisabled"><a class="page-link" href="@Url.Page("", new {sortOrder = ViewData["Sort"], searchString = ViewData["Search"], pageNumber = prev, filter = filter})"><i class="bi bi-caret-left-fill"></i></a></li>
        @for (int i = 1; i <= Model.Trainees.TotalPages; i++)
        {
            <li class="page-item"><a class="page-link @(i == Model.Trainees.PageIndex ? "text-white": "text-white-50")" href="@Url.Page("", new {sortOrder = ViewData["Sort"], searchString = ViewData["Search"], pageNumber = i, filter = filter})">@i</a></li>
        }
        <li class="@nextDisabled"><a class="page-link" href="@Url.Page("", new {sortOrder = ViewData["Sort"], searchString = ViewData["Search"], pageNumber = next, filter = filter})"><i class="bi bi-caret-right-fill"></i></a></li>
    </ul>

    <ul class="nav">
        <li class="nav-item dropdown">
            <a class="nav-link text-white dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Filter
            </a>

            <ul class="dropdown-menu">
                <form id="filterForm" asp-action="Index" method="get">
                    @foreach(var course in Model.Courses)
                    {
                        <li>
                            <div class="dropdown-item">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" checked="@filter.Contains(course)" name="filter" value="@course" id="@course"
                                       onchange="document.getElementById('filterForm').submit()" />
                                    <label class="form-check-label" for="@course">@course</label>
                                </div>
                            </div>
                        </li>
                    }
                    <input name="pageNumber" value="@Model.Trainees.PageIndex" hidden />
                    <input name="sortOrder" value="@ViewData["Sort"]" hidden />
                    <input name="searchString" value="@ViewData["Search"]" hidden />
                </form>
            </ul>

        </li>
        <li class="nav-item dropdown">
            <a class="nav-link text-white dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Sort By
            </a>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item @((string)ViewData["Sort"] == "firstname" ? "active": "")" href="@Url.Page("", new {sortOrder = "firstname", searchString = ViewData["Search"], pageNumber = Model.Trainees.PageIndex, filter = filter})">First Name</a></li>
                <li><a class="dropdown-item @((string)ViewData["Sort"] == "lastname" ? "active": "")" href="@Url.Page("", new {sortOrder = "lastname", searchString = ViewData["Search"], pageNumber = Model.Trainees.PageIndex, filter = filter})">Last Name</a></li>
                <li><a class="dropdown-item @((string)ViewData["Sort"] == "id" ? "active": "")" href="@Url.Page("", new {sortOrder = "id", searchString = ViewData["Search"], pageNumber = Model.Trainees.PageIndex, filter = filter})">Id</a></li>
                <li><a class="dropdown-item @((string)ViewData["Sort"] == "course" ? "active": "")" href="@Url.Page("", new {sortOrder = "course", searchString = ViewData["Search"], pageNumber = Model.Trainees.PageIndex, filter = filter})">Course</a></li>
            </ul>
        </li>
    </ul>

</nav>

<table class="table w-100">
    <thead>
        <tr>
            <th>ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Course</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var trainee in Model.Trainees)
        {
            <tr>
                <td>@trainee.Id</td>
                <td>@trainee.FirstName</td>
                <td>@trainee.LastName</td>
                <td>@trainee.Email</td>
                <td>@trainee.Course.Title</td>
            </tr>
        }
    </tbody>
</table>

<script src="~/js/tabs.js"></script>

@section Scripts{
    <script>
        function handleSearch(e) {
            if (e.keyCode == 13) {
                e.preventDefault();
                document.getElementById('searchForm').submit();
            }
        }
    </script>
}
